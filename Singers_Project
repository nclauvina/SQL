//Create a table with famous singers and what genre of music they do.
CREATE TABLE famous_singers (id INTEGER PRIMARY KEY, name TEXT, type TEXT);
INSERT INTO famous_singers VALUES (1, "Kanye", "rap");
INSERT INTO famous_singers VALUES (2, "Taylor Swift", "pop");
INSERT INTO famous_singers VALUES (3, "BTS", "K-POP");
INSERT INTO famous_singers VALUES (4, "Post Malone", "hip hop");
SELECT * FROM famous_singers;

//Create a table with those famous singers and a song they created. 
CREATE TABLE famous_singers_songs (id INTEGER PRIMARY KEY, name TEXT, song TEXT);
INSERT INTO famous_singers_songs VALUES (1, "Kanye", "Stronger");
INSERT INTO famous_singers_songs VALUES (2, "Taylor Swift", "Red");
INSERT INTO famous_singers_songs VALUES (3, "BTS", "Dynamite");
INSERT INTO famous_singers_songs VALUES (4, "Post Malone", "Fall Apart");
SELECT * FROM famous_singers_songs

//Create a table with a genre of music with an album within that genre
CREATE TABLE famous_albums (id INTEGER PRIMARY KEY, genre TEXT, album TEXT);
INSERT INTO famous_albums VALUES(1, "rap", "Graduation");
INSERT INTO famous_albums VALUES(2, "rock", "Chinese Democracy");
INSERT INTO famous_albums VALUES(3, "pop", "Red");
INSERT INTO famous_albums VALUES(4, "country", "This One's for you too");
SELECT * FROM famous_albums;

//Use Join to make a table that includes singers, the genre, and the song they're known for. 
SELECT f.name, f.type, s.song
FROM famous_singers f
JOIN famous_singers_songs s
ON f.name = s.name

//USE INNER JOIN to make a table that includes the genre, the album, and the artist.
SELECT a.genre, a.album, f.name
FROM famous_albums a
INNER JOIN famous_singers f
ON a.genre = f.genre;

//USE LEFT INNER JOIN to make a table that includes the genre, the album, and the artist regardless if there's an artist listed for the given album. 
SELECT a.genre, a.album, f.name
FROM famous_albums a
LEFT JOIN famous_singers f
ON a.genre = f.genre;
